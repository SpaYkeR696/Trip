{"ast":null,"code":"var _jsxFileName = \"/home/spayker/hexlet/trip/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TripList } from './components/TripList/TripList';\nimport { TripForm } from './components/TripForm/TripForm';\nimport { TripApi } from './components/api/TripApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [drivers, setDrivers] = useState([]);\n  useEffect(() => {\n    const fetchDrivers = async () => {\n      try {\n        const data = await TripApi.getTrips();\n        setDrivers(data);\n      } catch (error) {\n        error;\n      }\n    };\n    fetchDrivers();\n  }, []);\n  const updateDriversList = async () => {\n    try {\n      const data = await TripApi.addTrips();\n      setDrivers(data);\n    } catch (error) {\n      error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Drivers List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TripForm, {\n      updateDriversList: updateDriversList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TripList, {\n      drivers: drivers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"raR4BlYU6SFF+4kZd+KJRlHMG/I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TripList","TripForm","TripApi","jsxDEV","_jsxDEV","App","_s","drivers","setDrivers","fetchDrivers","data","getTrips","error","updateDriversList","addTrips","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/spayker/hexlet/trip/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TripList } from './components/TripList/TripList';\nimport { TripForm } from './components/TripForm/TripForm';\nimport { TripApi } from './components/api/TripApi';\n\nexport const App = () => {\n  const [drivers, setDrivers] = useState([]);\n\n  useEffect(() => {\n    const fetchDrivers = async () => {\n      try {\n        const data = await TripApi.getTrips();\n        setDrivers(data);\n      } catch (error) {\n        error;\n      }\n    };\n\n    fetchDrivers();\n  }, []);\n\n  const updateDriversList = async () => {\n    try {\n      const data = await TripApi.addTrips();\n      setDrivers(data);\n    } catch (error) {\n      error;\n    }\n  };\n\n  return (\n    <div>\n      <h1>Manage Drivers List</h1>\n      <TripForm updateDriversList={updateDriversList} />\n      <TripList drivers={drivers} />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,OAAO,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;QACrCH,UAAU,CAACE,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdA,KAAK;MACP;IACF,CAAC;IAEDH,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMH,IAAI,GAAG,MAAMR,OAAO,CAACY,QAAQ,CAAC,CAAC;MACrCN,UAAU,CAACE,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdA,KAAK;IACP;EACF,CAAC;EAED,oBACER,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bf,OAAA,CAACH,QAAQ;MAACY,iBAAiB,EAAEA;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDf,OAAA,CAACJ,QAAQ;MAACO,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACb,EAAA,CAhCWD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}