{"ast":null,"code":"var _jsxFileName = \"/home/spayker/hexlet/trip/src/components/DriverList/DriverList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getDrivers } from \"../api/DriverApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TripList = () => {\n  _s();\n  const [drivers, setDrivers] = useState([]);\n  useEffect(() => {\n    const fetchDrivers = async () => {\n      const response = await getDrivers();\n      setDrivers(response.data);\n    };\n    fetchDrivers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: drivers.map(driver => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: driver.name\n      }, driver.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(TripList, \"raR4BlYU6SFF+4kZd+KJRlHMG/I=\");\n_c = TripList;\nvar _c;\n$RefreshReg$(_c, \"TripList\");","map":{"version":3,"names":["React","useState","useEffect","getDrivers","jsxDEV","_jsxDEV","TripList","_s","drivers","setDrivers","fetchDrivers","response","data","children","map","driver","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/spayker/hexlet/trip/src/components/DriverList/DriverList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getDrivers } from \"../api/DriverApi\";\n\nexport const TripList: React.FC = () => {\n    const [drivers, setDrivers] = useState([]);\n    \n    useEffect(() => {\n        const fetchDrivers = async () => {\n            const response = await getDrivers();\n            setDrivers(response.data);\n        };\n\n        fetchDrivers();\n    }, []);\n\n    return (\n        <div>\n            <ul>\n                {drivers.map((driver: any) => (\n                    <li key={driver.id}>{driver.name}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMR,UAAU,CAAC,CAAC;MACnCM,UAAU,CAACE,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC;IAEDF,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAQ,QAAA,eACIR,OAAA;MAAAQ,QAAA,EACKL,OAAO,CAACM,GAAG,CAAEC,MAAW,iBACrBV,OAAA;QAAAQ,QAAA,EAAqBE,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CArBWD,QAAkB;AAAAgB,EAAA,GAAlBhB,QAAkB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}